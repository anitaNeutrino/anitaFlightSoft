#-----------------------------------------------------------------------------
#
#      File         :  modload
#      Abstract     :  Loads the PLX installable module
#      Last Revision:  10-01-03
#      SDK Version  :  4.20
#
#-----------------------------------------------------------------------------


clear

# Remove comment to display script commands as it runs
#set -x


#=============================================================================
# Modify the "declare" statement below to set 'PLX_SDK_DIR' to the location
# of the PLX Linux installation path.  Some examples are:
#
#      declare -x PLX_SDK_DIR=/usr/src/PlxLinux
#      declare -x PLX_SDK_DIR=/home/$USER/PlxLinux
#=============================================================================
if [ "${PLX_SDK_DIR}1" == "1" ]; then
    # Add PLX_SDK_DIR to environment variables
    declare -x PLX_SDK_DIR=/usr/src/PlxLinux

    echo
    echo "  Note:"
    echo
    echo "      The required environment variable, PLX_SDK_DIR, is not defined"
    echo "      in the environment.  The default value (\"$PLX_SDK_DIR\")"
    echo "      will be used instead.  Please update your environment to override"
    echo "      the default, or modify this script accordingly.  To set an"
    echo "      environment variable, use the \"declare\" command as follows:"
    echo
    echo "         declare -x PLX_SDK_DIR=<root of PLX Linux installation>"
    echo
else
    # Make sure that PLX_SDK_DIR is in the environment, not just a shell variable
    declare -x PLX_SDK_DIR=${PLX_SDK_DIR}
fi


# Path to the driver nodes
path=/dev/plx


# Verify command-line
if [ "$1" = "" ]; then
    plx_error=1
else
    plx_error=1

    if [ "$1" = "9050" ]; then
        plx_error=0
    fi

    if [ "$1" = "9030" ]; then
        plx_error=0
    fi

    if [ "$1" = "9080" ]; then
        plx_error=0
    fi

    if [ "$1" = "9054" ]; then
        plx_error=0
    fi

    if [ "$1" = "9056" ]; then
        plx_error=0
    fi

    if [ "$1" = "9656" ]; then
        plx_error=0
    fi

    if [ "$1" = "6000" ]; then
        plx_error=0
    fi

    if [ "$1" = "PlxPci" ]; then
        plx_error=0
    fi
fi

if [ "${plx_error}" == "1" ]; then
    echo
    echo "PLX Linux module load script"
    echo "Copyright (c) 2003, PLX Technology, Inc."
    echo
    echo "  Usage: modload {PLX_Chip_Type} [DebugOption]"
    echo
    echo "        PLX_Chip_Type = 9050"
    echo "                        9030"
    echo "                        9080"
    echo "                        9054"
    echo "                        9056"
    echo "                        9656"
    echo "                        6000"
    echo "                        PlxPci"
    echo
    echo "        DebugOption   = <none> : Load Release build of module"
    echo "                        'd'    : Load Debug build of module"
    echo
    echo "  E.g.: modload 9054 d   - Load 9054 module debug version"
    echo "        modload 9656     - Load 9656 module release version"
    echo
    exit
fi


# PLX Chip to load module for
plx_chip=$1

# Check for debug version
if [ "$2" != "" ]; then
    debug=_dbg
fi

# Registered name of driver
if [ "$1" == "PlxPci" ]; then
    name=PlxPci
else
    name=Pci${plx_chip}
fi

# Name of module to load (without .o extension)
module=${name}${debug}

# Install the module
echo
echo "   *****************************************************************"
echo "   * NOTES:                                                        *"
echo "   *                                                               *"
echo "   *  You must be superuser, logged in as root, or have sufficient *"
echo "   *  rights to install modules or this script will not work.      *"
echo "   *                                                               *"
echo "   *  A warning regarding 'kernel tainting' is normal.  This is    *"
echo "   *  because the PLX driver is marked with a 'Proprietary'        *"
echo "   *  license tag, not GPL.  For more information, please refer    *"
echo "   *  to:                                                          *"
echo "   *        http://www.tux.org/lkml/#export-tainted                *"
echo "   *****************************************************************"
echo

echo "Installing module ($module)...."
/sbin/insmod --verbose --version $PLX_SDK_DIR/linux/driver/${name}/Driver/${module}.o $*
echo

# Get the major number
echo -n "Getting Module major number..... "
major=`cat /proc/devices | awk "\\$2==\"$name\" {print \\$1}"`

# Check if valid
if [ "$major" = "" ]; then
    echo "ERROR: Module not loaded or no device found"
    echo
    exit
fi

# Display Major ID
echo "Ok (MajorID = $major)"

# Create the device node path
echo -n "Creating device node path....... "
if [ -d ${path} ]; then
    echo "$path already exists"
else
    mkdir $path
    chmod 0777 $path
    echo "Ok (Path = $path)"
fi

# Create the device nodes (up to 4 by default)
echo -n "Creating device nodes........... "
rm -f ${path}/${name}*
mknod ${path}/${name}   c $major 255
mknod ${path}/${name}-0 c $major 000
mknod ${path}/${name}-1 c $major 001
mknod ${path}/${name}-2 c $major 002
mknod ${path}/${name}-3 c $major 003
mknod ${path}/${name}-4 c $major 004

chmod 777 $path/*
echo Ok

echo
echo Module load complete.
echo
echo
