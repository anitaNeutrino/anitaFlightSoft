











                                    Acromag, Inc.
                                  30765 S.Wixom Road
                                    P.O. Box 437
                              Wixom, Michigan 48393-7037

                                Phone: (248)295-0310
                                 FAX: (248)624-9234

                               Linux Software Library
                          Information File for the IOS560 Board
                                        V1.0
                                      08/18/10




               The  information  in this manual is subject to  change
               without notice.   Acromag,  Inc.  makes no warranty of
               any kind with regard to this material and accompanying
               software,  including, but not limited to , the implied
               warranties  of  merchantability  and  fitness  for   a
               particular   purpose.    Acromag,   Inc.   assumes  no
               responsibility for any errors that may appear in  this
               manual and accompanying software.

               See GPL.txt.


































	1. Overview

	This  "information"  file  contains a description of  the library
	programs  used for  the following Acromag Industrial  I/O  Board:

	     IOS560 CAN I/O Board

	2. Introduction

	The  software  for  the  IOS560  I/O  board   is  implemented  as
	a library of "C" functions.  This will  make  it     possible  to
	utilize the board by simply linking  the user's  code   with  the
	provided   library   and   making   function   calls   for   each
	"command"  to be accomplished.  Most of the function  calls  will
	require  a few parameters or the address of a parameter block  to
	be  passed.   The  parameters will  include  the  board  address,
	configuration  information,  data storage addresses,  and  status
	information. These functions accomplish the following tasks:

	     - Configuration
	     - Read Status and ID
	     - Read Input
	     - Write Output



	Also  included  is  a demonstration program which shows  how  the
	library routines are used.  It is also a helpful program  to  use
	when first installing the board, checking  it  out, and  learning
	how it works.




	3. List of Files

	The library  software  for  each  Acromag  I/O  board  is  in   a
	correspondingly  named  subdirectory  on the supplied media.  The
	files  which  make up the library for the IOS560 board are stored
	in the subdirectory named "IOS560".

	There  are two types of program files provided.   Library program
	files are the files which make up the "library".  Support program
	files contain example  programs which show how to use the library
	programs.











				   1









	3.1 Library Program Files

	The  following  files are included on the supplied  media  and
	make up the actual "library" software.

	     ios560b.h   - include file
	     sja1000b.c - configure, transmit, receive
	     ios560bisr.c - interrupt handler


	3.2 Support Program Files

	The  following files  are included  on the  supplied media.   The
	test program demonstrates how  the library  programs may be used.

         drvr560b.c - test program to demonstrate  library  programs.
         ioscarrier.h  - include file for carrier support.
         ioscarrier.c  - source file for carrier support.


	4. Software Installation

	It  is strongly advised that the user make a backup copy  of  the
	distribution  media and  that  the original media be  stored in a
	safe place.

	The  software is installed by simply copying the library files to
	the  user's  work directory and compiling and  linking  with  the
	user's application program.


	5. Hardware Installation

	For proper installation of each Acromag I/O board the user should
	refer  to  the appropriate user's manual.


	6. Usage of the Library and Support Programs

	The  software is installed  by copying the supplied files to your
	work  directory and compiling  and linking  with your application
	program.
	It  is recommended that the user read the  User's Manual for  the
	board  and  thoroughly  familiarize themselves with the hardware.
	For a new user to become familiar with the Acromag Library it may
	be  most  "straight forward"  to proceed in the following manner:










				   2







        (a) Build and load the Acromag device driver module.

            i)   See  the  information  file  in  the device driver
            directory "/home/ios/devios/info.txt"  for  information
            about building and loading the device driver module.

        (b) Build and execute the Acromag Library Demonstration.

            i)  Copy the Acromag Library routines from the "Ios560"
            directory of the source media to a new directory  under
            /home/ios/ios560.

            ii)  Copy   the  carrier   support  routines  from  the
            "carrier" directory  of the  source  media  to  a  new
            directory under  /home/ios/ioscarrier. 

            iii) Use the makefile to build the project.

            iv)  Launch  the  debugger,  "gdb a.out"  use  the  run 
            command start the program or ./a.out.

            v)   The  Acromag  Demonstration  program  menu  should
            appear  on  the  target processor's  console  terminal.



































				   3







	The following menu is displayed:

	     IOS560 BasicCAN Library Demonstration  Version A
	     1. Exit this Program
	     2. Set Carrier Base Address
	     3. Set IOS Slot Letter
	     4. Examine/Change CAN Channel
	     5. Set Up Configuration Block Parameters
	     6. Configure Board Command
	     7. Read ID PROM
	     8. Enable Interrupts
	     9. Disable Interrupts
	    10. Display Controller Registers
	    11. Read Message
	    12. Edit Transmit Buffer
	    13. Transmit Message
	    Select:


	To perform I/O, follow this sequence of menu selections:


	     Select  2: To set the Carrier base addresses.
	     Select  3: To set the IOS Slot Letter.
	     Select  7: To read the board's ID PROM.
 	     Select  6: To configure the board.
	     Select 11: To read message.
	     Select 12: To edit transmit buffer
	     Select 13: To transmit message


	To use  the  example  interrupt  routine  provided,  follow  this
	sequence of main menu selections:


	     Select 2: To set the Carrier base address.
	     Select 3: To set the IOS Slot Letter.
	     Select 8: To enable the transmit interrupt handler.
	     Select 5: To  set  up the Configuration  Block  through  the
                   Configuration  Block Menu.   This  Menu will allow
                   the user to set the board up for operation.
	     Select 6: To  configure  the board using the information  in
                   the Configuration Block.

	     Select 11: To read message.
	     Select 13: To transmit message.












				   4









	6.1 Explanation of Main Demonstration Menu

	Following is an explanation of each menu selection:

	     1. Exit this Program

	     This  selection detaches the interrupt handlers used by  the
	     demonstration  program (if  any  are  attached)  and  causes
	     execution to be returned to the shell.

	     2. Set Carrier Base Address

	     This  selection  allows  the  user to set the address of the
	     carrier board being used.

	     3. Set IOS Slot Letter

	     This  selection  allows the user to set or change  the  slot
	     letter of the IOS module being used.   The value entered here
	     will  automatically  be  entered in  the  Configuration  and
	     Status Block structures.

	     4. Examine/Change CAN Channel

	     This menu selection will  allow the user  to select  one of
	     two CAN controller channels (0 and 1) available for use  on
	     the module.

	     5. Set Up Configuration Block Parameters

	     This  selection will cause the Configuration Block Parameter
	     Menu to be displayed.  Through that menu it will be possible
	     to  enter values into the various structure members  of  the
	     Configuration Block structure.   See section 6.2 for details
	     on the Configuration Block Parameter Menu which follows.

	     6. Configure Board Command

	     This  menu selection will call the  cnfg560()  function  and
	     pass  a  pointer  which points to  the  Configuration  Block
	     structure.    Information  in  the  Configuration Block will
	     be written to the board.

	     7. Read ID Command

	     This menu selection will  call  the  ReadIOSID() function.
	     The  I.D. information  is  read from the board and returned
	     by the ReadIOSID() function.   The status  information is
	     then displayed by the example program.







				   5







	     8. Enable Interrupts

	     This  menu selection allows the user to enable interrupts.
	     The interrupt  handler  allows  servicing  of  transmitter
	     interrupts by blocking until the  message  transmission is
	     complete.

	     9. Disable Interrupts

	     This menu selection disables all module interrupts.


	     10. Display Controller Registers

	     This  command  is used to read and  display  the contents of
	     the sja1000 CAN controller's registers.

	     11. Read Message

	     This command  will test  the  sja1000  CAN controller for a
	     message  present condition.  If a message is present, it is
	     read and the register values are displayed.

	     12. Edit Transmit Buffer

	     This  command  is used  to enter from  one to  eight message
	     bytes into  the transmit  message buffer.   Clear, Edit, and
	     Display transmit message  buffer contents  can be  selected.

	     13. Transmit Message

	     This  command is  used to  send the contents of the transmit
	     buffer to  the sja1000  CAN controller  and issue a transmit
	     command to the CAN controller.
























				   6






	6.2  Explanation of the Configuration Block Parameter Menu

	This menu  is  displayed  when  the  user  selects  the  "Set  Up
	Configuration  Block"  menu  item  from  the  Main  Demonstration
	Menu.   Through the Configuration Block Parameter Menu it will be
	possible  for  the  user to enter values into  the  Configuration
	Block structure.  Following is  the "Set Up  Configuration  Block
	Parameters"  menu.   All  numbers  are  displayed  and entered in
	hexadecimal.

         Configuration Block Parameters For Channel 0

          1. Return to Previous Menu
          2. Board I/O Pointer:  D0014180 (may vary)
             Board MEM Pointer:  D1800000 (may vary)
          3. Message ID:         0x555
          4. Message Length:     0x08
          5. Acceptance Code:    0
          6. Acceptance Mask:    FF
          7. Bus Timing 0:       81
          8. Bus Timing 1:       18
          9. Output Control:     1A
         10. Clock Divider:      40
         11. Control:            5E
         12. Command:            0C
         13. Interrupt Vector:   C0
         14. Transceiver Enable: 01
         15. Transceiver Active: 01
         16. Module Clock Speed: 00
         17. Carrier Clock Speed:01

	    Select:

	     (Note  that  the values in the menu will differ depending  on
	     your system.)

	     Following is an explanation of each menu selection:

	     1. Return to Previous Menu

	     This selection returns to the Main Demonstration Menu.


	     2. Board Pointer

	     The  IOS  module  address  is displayed,  however,  the  base
	     address  can  only be changed through the Main Menu.    This
	     parameter  is  automatically  updated  in  the Configuration
	     Block when the user selects the "Set Carrier Address" item
	     in the Main Demonstration Menu.









				   7







	     3. Message ID

	     This  selection  allows the user to enter an 8 bit value for
	     the Message I.D or Identifier Byte 1.

	     4. Message Length

	     This  selection  allows the user to enter an 8 bit value for
	     the Message Length or Identifier Byte 2.

	     5. Acceptance Code

	     This  selection  allows the user to enter an 8 bit value for
	     the Acceptance Code Register.

	     6. Acceptance Mask

	     This  selection  allows the user to enter an 8 bit value for
	     the Acceptance Mask Register.

	     7. Bus Timing 0

	     This  selection  allows the user to enter an 8 bit value for
	     the Bus Timing Register 0.

	     8. Bus Timing 1

	     This  selection  allows the user to enter an 8 bit value for
	     the Bus Timing Register 1.

	     9. Output Control

	     This  selection  allows the user to enter an 8 bit value for
	     the Output Control Register.

	     10. Clock Divider

	     This  selection  allows the user to enter an 8 bit value for
	     the Clock Divider Register.

	     11. Control

	     This  selection  allows the user to enter an 8 bit value for
	     the Control Register.

	     12. Command

	     This  selection  allows the user to enter an 8 bit value for
	     the Command Register.









				   8







	     13. Interrupt Vector

	     This  selection  allows the user to enter an 8 bit value for
	     the Interrupt Vector Registers for both CAN controllers.

	     14. Transceiver Enable

	     This  selection  allows  the user to enter a value to enable
	     or disable the CAN transceiver.

	     15. Transceiver Active

	     This selection allows the user to  enter a value to activate
	     or go to standby (low power) mode for the CAN transceiver.

	     16. Module Clock Speed

	     This  selection  allows  the user to enter a value  for  the
	     CAN module clock speed.

	     17. Carrier Clock Speed

	     This  selection  allows  the user to enter a value  for  the
	     carrier  clock speed.  The carrier  clock speed should match
	     the CAN module clock speed.

































				   9







	7. Description of Library Programs.

	Following  are descriptions of the programs and files which  make
	up the library.

	ios560b.h - This module contains the  definitions and  structures
	used by the library.

	sja1000init() - This  module is used to initialize  the board for
	basicCAN I/O.   A pointer to the Configuration Block is passed to
	this  routine.    The routine  will  use  a  pointer  within  the
	Configuration Block to reference registers on  the board.

	  calling sequence:

	     status = sja1000init(ptr);

	     where:
 		  status - (int) Returned status of the function,
                         0 on success -1 or error.
		  ptr  - (structure  pointer)  This is a pointer  to  the
		  Configuration Block structure.


	sja1000reg_dump()  -  This  module is  used to perform a register
	dump  of the sja1000  CAN controller and can be used to provide a
	diagnostic display of the sja1000 CAN controller's registers.   A
	pointer to the Configuration Block is passed to this  routine..

	  calling sequence:

	     void = sja1000reg_dump(ptr);

	     where:
		  ptr      - (structure  pointer)  This is a pointer  to  the
                     Configuration Block structure.


	sja1000_xmit()  -  This  module  is used  to transmit a  basicCAN
	message.   A pointer to the Configuration Block is passed to this
	routine  which  allows  access  to  the boards  registers and the
	CAN_TxMsg structure.

	  calling sequence:

         status = sja1000_xmit(ptr);
         where:
          status  - (int) The returned status of the function,
                    0 on success -1 or error.
		  ptr     - (structure  pointer)  This is a pointer  to  the
                    Configuration Block structure.







				   10







	sja1000_recv()  -  This  module  is used  to  receive a  basicCAN
	message.   A pointer to the Configuration Block is passed to this
	routine  which  allows  access  to  the boards  registers and the
	CAN_RxMsg structure.

	  calling sequence:

         status = sja1000_recv(ptr);
         where:
          status  - (int) The returned status of the function,
                    0 on success -1 or error.
		  ptr     - (structure  pointer)  This is a pointer  to  the
                    Configuration Block structure.



	getMsg()  -  This  module is used to receive and display basicCAN
	message.   A pointer to the Configuration Block is passed to this
	routine  which  allows  access  to  the boards  registers and the
	CAN_RxMsg structure.

	  calling sequence:

         void = getMsg(ptr);
         where:
		  ptr     - (structure  pointer)  This is a pointer  to  the
                    Configuration Block structure.



	8. Description of Support Programs

	Following  is  a  description of the support  files  and  program
	modules  which  provide  examples  for  the  use  of  the library
	programs.

	apc8620.c - This  file   provides   carrier   support   routines.

	drvr560b.c  - This  is a program which demonstrates the  usage of
	the library modules.   This program is menu driven and allows the
	user to become familiar with the  IOS560  board  and  the  library
	software.   The user may,  through menu  selections,   configure,
	read from and write to the board.















				   11




