


















                                    Acromag, Inc.
                                 30765 S.Wixom Road
                                    P.O. Box 437
                              Wixom, Michigan 48393-7037

                                Phone: (248)295-0310
                                 FAX: (248)624-9234

                               Linux Software Library
                         Information File for Carrier Device
                                        V2.0
                                      04/01/11




               The  information  in this manual is subject to  change
               without notice.   Acromag,  Inc.  makes no warranty of
               any kind with regard to this material and accompanying
               software,  including, but not limited to , the implied
               warranties  of  merchantability  and  fitness  for   a
               particular   purpose.    Acromag,   Inc.   assumes  no
               responsibility for any errors that may appear in  this
               manual and accompanying software.

               See GPL and LGPL.txt.




























	Compiling and Loading the Device Driver Module

        i)   Copy the Apc8650 device driver routines from the "dev8650"
             directory of the source media to a new directory  under
             /home/ip/dev8650.   Copy  the carrier  support routines from the
             "carrier" directory  of the  source  media  to  a  new
             directory  under   /home/ip/carrier.
             Selecting carrier support is accomplished by copying the specific
             carrier's source files to the generic  names  "carrier.c"  and
             "carrier.h" in the carrier subdirectory.
             Copy the ISR support routines from the "isr" directory on
             the source media to a new directory under /home/ip/isr. 
             To select Message Signaled Interrupt (MSI) locate the
             "#define APCIE_USE_MSI_INT" in dev8650.c uncomment to enable MSI.
             Several modules can generate an interrupt that can be used to
             indicate the competition of a data acquisition or some digital
             I/O or timer event.   Module ISRs files are found in the 'isr'
             directory using the naming convention isr_xxx.c
             (where xxx is the model number).  If you plan to generate interrupts
             with the modules a call to the isrxxx() must be placed into the
             'carrier_handler' function for the slot that corresponds to the module.
             Any change to the 'dev8650.c' file requires the re-compilation
             of the device driver.

        ii)  Create device nodes for each carrier in the /dev directory using
             "/bin/mknod apc8650_0 c 45 0" 	(1st carrier)
             "/bin/mknod apc8650_1 c 45 1" 	(2nd carrier)
             "/bin/mknod apc8650_2 c 45 2" 	(3rd carrier)
             "/bin/mknod apc8650_3 c 45 3" 	(4th carrier)
             The command line items are as follows:
             apc8650_x - Device name x = minor number 0 - 3. 
             c       - Character device driver.
             45      - Major number defined in the device driver file.
             x       - Minor number 0 to 3.

             To create persistent device nodes for Acromag PCI board products.
             Edit your '/etc/rc.d/rc.local' as follows:
             #Acromag Apc8650
             if [ ! -r /dev/apc8650_0 ]; then
             /bin/mknod -m 666 /dev/apc8650_0 c 45 0 #(1st carrier)
             /bin/mknod -m 666 /dev/apc8650_1 c 45 1 #(2nd carrier)
             /bin/mknod -m 666 /dev/apc8650_2 c 45 2 #(3rd carrier)
             /bin/mknod -m 666 /dev/apc8650_3 c 45 3 #(4th carrier)
             fi

             You may also need to change the permissions of this file.
             From a console use 'sudo nautilus --browser'
             Owner = root
             Group = root
             Execute = Allow executing as a program
             SELinux Context = initrc_exec_t

             or to to change the permissions from a root console
             chown root rc.local
             chown root:root rc.local
             chmod 777 rc.local

             You may also need to enable the rc-local service.
             From a console use 'sudo systemctl enable rc-local.service'.
             
        iii) As 'root' use the makefile to build the project.

        iv)  As 'root' load the module by using the insmod utility 
             "insmod /home/ip/dev8650/apc8650.ko".

        v)   Go to one of the ipxxx directories and see the infoxxx.txt
             file for information about compiling demonstration programs.

        vi)  Other carrier device instances can be obtained by changing
             parameter 1 of CarrierOpen().

             if(CarrierOpen(2, &c_block.nHandle) != S_OK) opens third device.


 
Note: If a "irq xxx: nobody cared" is reported when the board generates an interrupt, try
adding one of the following boot line options; "irqpoll", "acpi=off", or "pci=noacpi"
to the kernel boot line in file boot\grub\grub.conf (see below).

# grub.conf generated by anaconda
#
# Note that you do not have to rerun grub after making changes to this file
# NOTICE:  You have a /boot partition.  This means that
#          all kernel and initrd paths are relative to /boot/, eg.
#          root (hd0,0)
#          kernel /vmlinuz-version ro root=/dev/VolGroup00/LogVol00
#          initrd /initrd-version.img
#boot=/dev/sda
default=0
timeout=5
splashimage=(hd0,0)/grub/splash.xpm.gz
hiddenmenu
title Fedora (2.6.21-1.3194.fc7)
	root (hd0,0)
	kernel /vmlinuz-2.6.21-1.3194.fc7 ro root=/dev/VolGroup00/LogVol00 rhgb quiet irqpoll
	initrd /initrd-2.6.21-1.3194.fc7.img
