Title: "SIP COMmuncation library"
    Version @VERSION@

sipcom is a library of C functions that takes care of
communicating with the Long Duration Balloon SIP package of the NSBF
(http://www.nsbf.nasa.gov).

We use the following SIP services:
	- transfers science commands from the ground
	- transfers ``high rate'' data from the science payload to the
	  ground at rates up to 6000 bits/second via TDRSS.
	- transfers ``low rate'' data at a rate of 255 bytes every 30
	  seconds via TDRSS or Iridium.
	- provides GPS time, position, and pressure/altitude to the science
	  payload.

Cabling:

Communicating with the SIP requires three (3) serial lines.

When using the SIP simulator, each cable has a 9-pin RS-232 connector on
each end. The pins are connected as in the diagram below. For the actual
SIP, I am not sure.

>     2 ___________    ___________ 2
>                  \  /
>                   \/     
>                   /\      
>     3 ___________/  \___________ 3
>                   
>     5 __________________________ 5

Serial lines in version 1.15 and later:

	SIPcom reads the serial port setup from configuration files.
	You tell <sipcom_init> which directory the config files are in
	using the config_parameter to it.

	In that directory, you can have files named Comm1_port, Comm2_port,
	and Highrate_port. The first line of each file gives the name of
	the serial line device file.

	For example, if the config_dir is "/usr/local/anita/sipcom", then
	the file "/usr/local/anita/sipcom/Comm2_port" might contain the
	following text:

>      /dev/ttyS4
>      The above line gives the line connected to the COMM2 port.
>      Be sure the fnorplex is engaged.

	As you can see, only the first line is read by sipcom. The
	subsequent lines are just comments.

	If one of the config files is missing or unreadable, then the
	defaults as follows

	- /dev/ttyS0 (com1) connects to SIP COMM1 port.
	- /dev/ttyS1 (com2) connects to SIP COMM2 port.
	- /dev/ttyS2 (com3) connects to SIP high rate TDRSS port.

Serial lines prior to version 1.15:

	The three serial lines were set up with the defaults above.

Notes for ANITA 2006, 2007:

	On the ANITA SBS flight computer, the following command must be
	run at boot time. I put it in /etc/rc.local. It puts the third
	serial line at the correct IRQ.
>		/bin/setserial /dev/ttyS2 irq 11

	Also, the bios settings must be changed on the "peripheral
	setup" page:

>               Desc                    orig    now
>               OnBoard Serial Port 1   Auto    3F8h
>               "       "      "    2   Auto    2F8h
>               "       "      "    3   Auto    3E8h,IRQ11
>               "       "      "    4   Auto    Auto
 

Callback functions:

If you want to do anything when sipcom parses input from the SIP, you must
provide callback functions. The callbacks are code that you provide, and
that sipcom will execute whenever it parses
	- a command from the ground
	- a request for low-rate data
	- SIP gps position
	- SIP gps time
	- SIP altitude/pressure

If you do not provide a callback for a particular item, then sipcom will
take no action when it encounters it.

Compiling:

Since sipcom uses the pthreads library, you must link using -lpthread.

Example code:

See the file driver.c in the source distribution. It should contain
examples of all, I hope, functions in the library.

Data format for high-rate data:

>    byte    length
>    offset  (bytes)  value    description
>    ------  ------   -----    -----------
>       0       2     0xF00D   START_HDR
>       2       2     0xD0CC   AUX_HDR
>       4       2     0xAE0x   ID_HDR (See below)
>       6       4     -        Sequential buffer count (32 bits)
>      10       2     NB       Number of bytes of science data
>      12      NB     -        Science data
>      12+NB    2     -        Checksum (See below)
>      14+NB    2     0xAEFF   SW_END_HDR
>      16+NB    2     0xC0FE   END_HDR
>      18+NB    2     0xD0CC   AUX_HDR
>
>    ID_HDR:
>	bit 0 = 0 LOS data
>	bit 0 = 1 SIP high-rate data
>
>	bit 1 = 0 Even number of science bytes.
>	bit 1 = 1 Odd number of science bytes. NB must be
>	    decremented and 0x00 pad byte at end of data removed.
>
>    Checksum calculated over the science bytes only; that is bytes
>	12 through (12+NB)-1.

Data format for low-rate data:

>    byte    length
>    offset  (bytes)  value    description
>    ------  ------   -----    -----------
>
>       0       1     0xCn     Source (n=1 [COMM1] or n=2 [COMM2])
>       1       1     -        Sequence number - cycles from 0 - 255
>       2       1     NB       Number of data bytes that follow
>       3      NB     -        Science data

Note that there are separate sequence numbers for COMM1 and COMM2. In previous
releases they shared the same sequence number.

Author:

    Marty Olevitch

    Physics Dept, Washington U in St Louis

    Tel: 314-935-6285

    marty@cosray.wustl.edu

    http://cosray.wustl.edu/~marty
